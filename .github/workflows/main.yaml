name: Check

on:
  pull_request:
  push:
    branches:
      - "main"

jobs:
  check:
    name: Check
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: rust-toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: "`cargo check`"
        run: cargo check --all-targets --all-features
      - uses: cargo-bins/cargo-binstall@main
      - name: "Install `cargo-deny`"
        run: "cargo binstall -y cargo-deny"
      - name: "`cargo deny`"
        run: cargo deny check
      - name: "`cargo clippy`"
        run: cargo clippy --workspace --all-targets --all-features
      - name: "`cargo test`"
        run: cargo test --all-features
  build:
    needs: [check]
    name: Build for ${{ matrix.target }}
    if: github.repository_owner == 'nikarh'
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
        provider:
          - openssl
          - rustls
        include:
          - target: x86_64-unknown-linux-musl
            provider: rustls
          - target: aarch64-unknown-linux-musl
            provider: rustls
    timeout-minutes: 60
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: "!contains(matrix.target, 'aarch64')"
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, 'aarch64')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          ref: refs/tags/rolling
          bin: ${{ github.event.repository.name }}
          include: LICENSE-MIT,LICENSE-APACHE,CHANGELOG.md,README.md
          features: ${{ matrix.provider }}
          target: ${{ matrix.target }}
          tar: all
          archive: ${{ github.event.repository.name }}-$target-$tag-${{ matrix.provider }}
          token: ${{ secrets.GITHUB_TOKEN }}
          dry-run: true
